#!/usr/bin/env bash
# i3-project-daemon-status - Show daemon status and diagnostics
# Part of Feature 015: Event-Based i3 Project Synchronization

set -euo pipefail

# Configuration
SOCKET_PATH="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}/i3-project-daemon/ipc.sock"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Usage
usage() {
    cat << EOF
Usage: i3-project-daemon-status [OPTIONS]

Show status and diagnostics for the i3 project event listener daemon.

OPTIONS:
    --format=FORMAT  Output format: text (default), json
    -h, --help       Show this help message

EXAMPLES:
    i3-project-daemon-status
    i3-project-daemon-status --format=json

EOF
    exit 0
}

# Parse arguments
FORMAT="text"

while [[ $# -gt 0 ]]; do
    case "$1" in
        --format=*)
            FORMAT="${1#*=}"
            shift
            ;;
        -h|--help)
            usage
            ;;
        *)
            echo -e "${RED}Error: Unknown option: $1${NC}" >&2
            exit 1
            ;;
    esac
done

# Validate format
if [[ "$FORMAT" != "text" && "$FORMAT" != "json" ]]; then
    echo -e "${RED}Error: Invalid format: $FORMAT (must be 'text' or 'json')${NC}" >&2
    exit 1
fi

# Check if daemon is running
if [[ ! -S "$SOCKET_PATH" ]]; then
    if [[ "$FORMAT" == "json" ]]; then
        echo '{"error":"Daemon not running","socket":"'$SOCKET_PATH'"}'
    else
        echo -e "${RED}✗ Daemon not running${NC}"
        echo -e "  Socket not found: $SOCKET_PATH"
        echo ""
        echo "Start daemon with: systemctl --user start i3-project-event-listener"
    fi
    exit 2
fi

# Query daemon
REQUEST='{"jsonrpc":"2.0","method":"get_status","id":1}'
RESPONSE=$(echo "$REQUEST" | nc -U "$SOCKET_PATH" 2>/dev/null || echo "")

if [[ -z "$RESPONSE" ]]; then
    if [[ "$FORMAT" == "json" ]]; then
        echo '{"error":"No response from daemon"}'
    else
        echo -e "${RED}✗ No response from daemon${NC}"
        echo "Check daemon logs: journalctl --user -u i3-project-event-listener"
    fi
    exit 2
fi

# Check for JSON-RPC error
if echo "$RESPONSE" | grep -q '"error"'; then
    if [[ "$FORMAT" == "json" ]]; then
        echo "$RESPONSE"
    else
        ERROR=$(echo "$RESPONSE" | grep -o '"message":"[^"]*"' | cut -d'"' -f4)
        echo -e "${RED}✗ Daemon error: $ERROR${NC}"
    fi
    exit 1
fi

# Parse JSON response
if [[ "$FORMAT" == "json" ]]; then
    echo "$RESPONSE" | grep -o '"result":{[^}]*}' | sed 's/"result"://' || echo "{}"
else
    # Extract fields using grep (portable alternative to jq)
    CONNECTION_STATUS=$(echo "$RESPONSE" | grep -o '"connection_status":"[^"]*"' | cut -d'"' -f4 || echo "unknown")
    I3_SOCKET=$(echo "$RESPONSE" | grep -o '"i3_socket_path":"[^"]*"' | cut -d'"' -f4 || echo "unknown")
    UPTIME=$(echo "$RESPONSE" | grep -o '"uptime_seconds":[0-9.]*' | cut -d':' -f2 || echo "0")
    EVENTS_PROCESSED=$(echo "$RESPONSE" | grep -o '"events_processed":[0-9]*' | cut -d':' -f2 || echo "0")
    ERRORS=$(echo "$RESPONSE" | grep -o '"error_count":[0-9]*' | cut -d':' -f2 || echo "0")
    ACTIVE_PROJECT=$(echo "$RESPONSE" | grep -o '"active_project":"[^"]*"' | cut -d'"' -f4 || echo "")
    TRACKED_WINDOWS=$(echo "$RESPONSE" | grep -o '"tracked_windows":[0-9]*' | cut -d':' -f2 || echo "0")
    
    # Format uptime
    UPTIME_INT=${UPTIME%.*}
    HOURS=$((UPTIME_INT / 3600))
    MINUTES=$(( (UPTIME_INT % 3600) / 60 ))
    SECONDS=$((UPTIME_INT % 60))
    UPTIME_STR="${HOURS}h ${MINUTES}m ${SECONDS}s"
    
    # Display status
    echo -e "${BOLD}i3 Project Event Listener Daemon Status${NC}"
    echo ""
    
    # Connection status
    echo -e "${BOLD}Connection:${NC}"
    if [[ "$CONNECTION_STATUS" == "connected" ]]; then
        echo -e "  Status: ${GREEN}● Connected${NC}"
    else
        echo -e "  Status: ${RED}○ Disconnected${NC}"
    fi
    echo -e "  i3 socket: ${CYAN}$I3_SOCKET${NC}"
    echo -e "  Uptime: ${CYAN}$UPTIME_STR${NC}"
    echo ""
    
    # Events
    echo -e "${BOLD}Events:${NC}"
    echo -e "  Total processed: ${CYAN}$EVENTS_PROCESSED${NC}"
    if [[ "$ERRORS" -gt 0 ]]; then
        echo -e "  Errors: ${RED}$ERRORS${NC}"
    else
        echo -e "  Errors: ${GREEN}$ERRORS${NC}"
    fi
    echo ""
    
    # Active project
    echo -e "${BOLD}Active Project:${NC}"
    if [[ -n "$ACTIVE_PROJECT" && "$ACTIVE_PROJECT" != "null" ]]; then
        echo -e "  Project: ${GREEN}$ACTIVE_PROJECT${NC}"
        echo -e "  Tracked windows: ${CYAN}$TRACKED_WINDOWS${NC}"
    else
        echo -e "  ${YELLOW}No active project (global mode)${NC}"
    fi
    
    # Systemd status
    echo ""
    echo -e "${BOLD}Systemd Service:${NC}"
    systemctl --user is-active i3-project-event-listener >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo -e "  Service: ${GREEN}● active${NC}"
    else
        echo -e "  Service: ${RED}○ inactive${NC}"
    fi
    
    # Show hint for logs
    echo ""
    echo -e "${BLUE}View logs:${NC} journalctl --user -u i3-project-event-listener -f"
fi
