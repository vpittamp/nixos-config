# i3 Window Manager Home Manager Configuration
# Works with both xsession and XRDP
{ config, lib, pkgs, ... }:

{
  # Generate i3 config file directly (works with XRDP)
  home.file.".config/i3/config".text = ''
    # i3 config file (v4)
    # Generated by home-manager

    set $mod Mod4
    font pango:monospace, Font Awesome 6 Free 10
    floating_modifier $mod

    # Default workspace layout - tabbed for all workspaces
    workspace_layout tabbed

    # Workspace variables with Font Awesome icons
    set $ws1 "1: terminal "
    set $ws2 "2: code "
    set $ws3 "3: firefox "
    set $ws4 "4: youtube "
    set $ws5 "5: files "
    set $ws6 "6: k8s "
    set $ws7 "7: git "
    set $ws8 "8: ai "
    set $ws9 "9 "

    # Application to workspace assignments
    # Terminal applications (Ghostty, Konsole, etc.)
    assign [class="ghostty"] $ws1
    assign [class="Ghostty"] $ws1
    assign [class="konsole"] $ws1
    assign [class="Konsole"] $ws1
    assign [class="Alacritty"] $ws1
    assign [class="alacritty"] $ws1

    # VS Code and Code editors
    assign [class="Code"] $ws2
    assign [class="code"] $ws2
    assign [class="VSCodium"] $ws2

    # Firefox browser
    assign [class="firefox"] $ws3
    assign [class="Firefox"] $ws3
    assign [class="Navigator"] $ws3

    # YouTube PWA - matches FFPWA pattern with YouTube
    # PWAs use the pattern FFPWA-<profileid>, we match by title/name
    assign [class="^FFPWA-.*" title="YouTube"] $ws4
    for_window [class="^FFPWA-.*" title=".*YouTube.*"] move to workspace $ws4

    # Yazi file manager - match by title since ghostty doesn't support --class
    for_window [class="ghostty" title="^Yazi:.*"] move to workspace $ws5

    # K9s Kubernetes manager - match by title set via wrapper script
    for_window [class="ghostty" title="^K9s-Workspace$"] move to workspace $ws6

    # Lazygit - match by title set via wrapper script
    for_window [class="ghostty" title="^Lazygit-Workspace$"] move to workspace $ws7

    # Google AI (Gemini) PWA - match by title pattern
    for_window [class="^FFPWA-.*" title=".*Gemini.*"] move to workspace $ws8
    for_window [class="^FFPWA-.*" title=".*Google AI.*"] move to workspace $ws8

    # Terminal (Shift+Return for floating)
    # NOTE: $mod+Return is now handled by project-aware launcher (see line ~166)
    bindsym $mod+Shift+Return exec ${pkgs.ghostty}/bin/ghostty --class=floating_terminal
    for_window [class="floating_terminal"] floating enable

    # Floating fzf launcher window
    for_window [instance="fzf-launcher"] floating enable

    # Window management
    bindsym $mod+Shift+q kill

    # Application launcher
    bindsym $mod+d exec ${pkgs.rofi}/bin/rofi -show drun -display-drun Applications
    bindsym $mod+Shift+d exec ${pkgs.xterm}/bin/xterm -name fzf-launcher -fa 'Monospace' -fs 12 -e /etc/nixos/scripts/fzf-launcher.sh
    bindsym $mod+Ctrl+d exec ${pkgs.xterm}/bin/xterm -name fzf-launcher -fa 'Monospace' -fs 12 -e /etc/nixos/scripts/fzf-send-to-window.sh

    # Keybinding cheatsheet (F1 for help)
    bindsym F1 exec /etc/nixos/scripts/keybindings-cheatsheet.sh

    # Clipboard (using FZF for better tmux integration)
    bindsym $mod+v exec /etc/nixos/scripts/clipcat-fzf.sh
    bindsym $mod+Shift+v exec ${pkgs.clipcat}/bin/clipcatctl clear

    # Screenshots (Spectacle)
    # Full screen to clipboard
    bindsym Print exec ${pkgs.kdePackages.spectacle}/bin/spectacle -bcf
    # Active window to clipboard
    bindsym $mod+Print exec ${pkgs.kdePackages.spectacle}/bin/spectacle -bca
    # Rectangular region to clipboard
    bindsym $mod+Shift+s exec ${pkgs.kdePackages.spectacle}/bin/spectacle -bcr

    # Quick launch (non-project-aware)
    # NOTE: $mod+c, $mod+g, $mod+y are now handled by project-aware launchers (see line ~166)
    bindsym $mod+b exec firefox
    bindsym $mod+Shift+b exec ${pkgs.ghostty}/bin/ghostty -e bash -c fh
    bindsym $mod+Shift+f exec ${pkgs.xfce.thunar}/bin/thunar
    bindsym $mod+k exec ${pkgs.ghostty}/bin/ghostty -e ~/.local/bin/k9s-workspace
    bindsym $mod+a exec ${pkgs.glib}/bin/gio launch ~/.local/share/applications/FFPWA-01K665SPD8EPMP3JTW02JM1M0Z.desktop

    # Split orientation
    bindsym $mod+h split h
    bindsym $mod+Shift+bar split v

    # Fullscreen
    bindsym $mod+f fullscreen toggle

    # Container layout
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Toggle floating
    bindsym $mod+Shift+space floating toggle
    bindsym $mod+space focus mode_toggle

    # Scratchpad
    bindsym $mod+Shift+minus move scratchpad
    bindsym $mod+minus scratchpad show

    # Focus
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Workspace switching (Mod+1-9)
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9

    # Move container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9

    # Project management keybindings
    bindsym $mod+p exec ~/.config/i3/scripts/project-switcher.sh
    bindsym $mod+Shift+p exec ~/.config/i3/scripts/project-clear.sh

    # T022: Project-aware application launchers
    bindsym $mod+c exec ~/.config/i3/scripts/launch-code.sh
    bindsym $mod+Return exec ~/.config/i3/scripts/launch-ghostty.sh
    bindsym $mod+g exec ~/.config/i3/scripts/launch-lazygit.sh
    bindsym $mod+y exec ~/.config/i3/scripts/launch-yazi.sh

    # T041: Monitor detection keybinding
    bindsym $mod+Shift+m exec ~/.config/i3/scripts/assign-workspace-monitor.sh

    # Reload/restart
    bindsym $mod+Shift+c reload
    bindsym $mod+Shift+r restart
    bindsym $mod+Shift+e exec "i3-msg exit"

    # No i3bar - using polybar instead (configured in polybar.nix)
    # Polybar is started via services.polybar.enable

    # Autostart - import environment variables for systemd services
    exec --no-startup-id systemctl --user import-environment DISPLAY XAUTHORITY

    # Launch polybar on all monitors (workaround for systemd service issues)
    exec_always --no-startup-id ${pkgs.procps}/bin/pkill polybar; sleep 1; for m in $(${pkgs.xorg.xrandr}/bin/xrandr --query | ${pkgs.gnugrep}/bin/grep " connected" | ${pkgs.coreutils}/bin/cut -d" " -f1); do MONITOR=$m ${pkgs.polybar}/bin/polybar --reload main & done

    # Web apps configuration
    include ~/.config/i3/web-apps.conf
  '';

  # Also configure via xsession for compatibility
  # Disabled for XRDP - we use home.file instead
  # xsession.windowManager.i3 = {
  #   enable = false;
  #   package = pkgs.i3;

  #   config = rec {
  #     modifier = "Mod4";
  #
  #     fonts = {
  #       names = [ "monospace" ];
  #       size = 10.0;
  #     };
  #
  #     floating.modifier = "Mod4";
  #
  #     keybindings = lib.mkOptionDefault {
  #       # Terminal
  #       "Mod4+Return" = "exec ${pkgs.alacritty}/bin/alacritty";
  #       "Mod4+Shift+Return" = "exec ${pkgs.alacritty}/bin/alacritty --class floating_terminal";
  #
  #       # Window management
  #       "Mod4+Shift+q" = "kill";
  #
  #       # Application launcher
  #       "Mod4+d" = "exec ${pkgs.rofi}/bin/rofi -show drun -display-drun Applications";
  #
  #       # Clipboard
  #       "Mod4+v" = "exec ${pkgs.clipcat}/bin/clipcat-menu";
  #       "Mod4+Shift+v" = "exec ${pkgs.clipcat}/bin/clipctl clear";
  #
  #       # Quick launch
  #       "Mod4+c" = "exec code";
  #       "Mod4+b" = "exec firefox";
  #
  #       # Split orientation
  #       "Mod4+h" = "split h";
  #       "Mod4+Shift+bar" = "split v";
  #
  #       # Scratchpad
  #       "Mod4+Shift+minus" = "move scratchpad";
  #       "Mod4+minus" = "scratchpad show";
  #
  #       # Workspace switching (Ctrl+1-9)
  #       "Control+1" = "workspace number 1";
  #       "Control+2" = "workspace number 2";
  #       "Control+3" = "workspace number 3";
  #       "Control+4" = "workspace number 4";
  #       "Control+5" = "workspace number 5";
  #       "Control+6" = "workspace number 6";
  #       "Control+7" = "workspace number 7";
  #       "Control+8" = "workspace number 8";
  #       "Control+9" = "workspace number 9";
  #
  #       # Move to workspace
  #       "Mod4+Shift+1" = "move container to workspace number 1";
  #       "Mod4+Shift+2" = "move container to workspace number 2";
  #       "Mod4+Shift+3" = "move container to workspace number 3";
  #       "Mod4+Shift+4" = "move container to workspace number 4";
  #       "Mod4+Shift+5" = "move container to workspace number 5";
  #       "Mod4+Shift+6" = "move container to workspace number 6";
  #       "Mod4+Shift+7" = "move container to workspace number 7";
  #       "Mod4+Shift+8" = "move container to workspace number 8";
  #       "Mod4+Shift+9" = "move container to workspace number 9";
  #     };
  #
  #     window.commands = [
  #       {
  #         criteria = { class = "floating_terminal"; };
  #         command = "floating enable";
  #       }
  #     ];
  #
  #     bars = [{
  #       id = "bar-0";
  #       statusCommand = "${pkgs.i3status}/bin/i3status";
  #       position = "bottom";
  #     }];
  #   };
  #
  #   # Include web apps configuration
  #   extraConfig = ''
  #     # Web Applications Configuration
  #     include ~/.config/i3/web-apps.conf
  #   '';
  # };

  # Wrapper scripts to set window titles for terminal apps
  # These scripts set the title before launching the app, allowing i3 to match on it

  home.file.".local/bin/k9s-workspace".text = ''
    #!/usr/bin/env bash
    # Set window title for i3 workspace assignment
    printf '\033]2;K9s-Workspace\007'
    exec ${pkgs.k9s}/bin/k9s "$@"
  '';
  home.file.".local/bin/k9s-workspace".executable = true;

  home.file.".local/bin/lazygit-workspace".text = ''
    #!/usr/bin/env bash
    # Set window title for i3 workspace assignment
    printf '\033]2;Lazygit-Workspace\007'
    exec ${pkgs.lazygit}/bin/lazygit "$@"
  '';
  home.file.".local/bin/lazygit-workspace".executable = true;

  # Create desktop files for terminal-based apps with unique window classes
  # This allows i3 to assign them to specific workspaces instead of the terminal workspace

  home.file.".local/share/applications/yazi-custom.desktop".text = ''
    [Desktop Entry]
    Type=Application
    Name=Yazi File Manager
    Comment=Blazing fast terminal file manager
    Exec=${pkgs.ghostty}/bin/ghostty -e ${pkgs.yazi}/bin/yazi
    Icon=folder
    Terminal=false
    Categories=System;FileManager;
    StartupWMClass=ghostty
  '';

  home.file.".local/share/applications/k9s-custom.desktop".text = ''
    [Desktop Entry]
    Type=Application
    Name=K9s Kubernetes Manager
    Comment=Terminal UI for Kubernetes
    Exec=${pkgs.ghostty}/bin/ghostty -e /home/vpittamp/.local/bin/k9s-workspace
    Icon=kubernetes
    Terminal=false
    Categories=System;Development;
    StartupWMClass=ghostty
  '';

  home.file.".local/share/applications/lazygit-custom.desktop".text = ''
    [Desktop Entry]
    Type=Application
    Name=Lazygit
    Comment=Terminal UI for git
    Exec=${pkgs.ghostty}/bin/ghostty -e /home/vpittamp/.local/bin/lazygit-workspace
    Icon=git
    Terminal=false
    Categories=Development;RevisionControl;
    StartupWMClass=ghostty
  '';
}
