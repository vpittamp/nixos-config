# i3 Window Manager Home Manager Configuration
# Works with both xsession and XRDP
{ config, lib, pkgs, ... }:

{
  # Feature 034: Application launcher now uses Walker (configured in walker.nix)
  # Legacy rofi configuration archived in i3-launcher.nix

  # Generate i3 config file directly (works with XRDP)
  home.file.".config/i3/config".text = ''
    # i3 config file (v4)
    # Generated by home-manager

    set $mod Mod4
    font pango:monospace, Font Awesome 6 Free 10
    floating_modifier $mod

    # Default workspace layout - default (tiling) for better window visibility
    workspace_layout default

    # Workspace variables with Font Awesome icons
    set $ws1 "1: terminal "
    set $ws2 "2: code "
    set $ws3 "3: firefox "
    set $ws4 "4: youtube "
    set $ws5 "5: files "
    set $ws6 "6: k8s "
    set $ws7 "7: git "
    set $ws8 "8: ai "
    set $ws9 "9 "

    # Default workspace-to-output assignments for i3bar
    # These are defaults; assign-workspace-monitor.sh will override based on monitor count
    # NOTE: These assignments are intentionally permissive (multiple outputs per workspace)
    # to ensure workspaces show on i3bar even before dynamic assignment runs

    # Feature 039: ALL window-to-workspace assignments now handled by Python daemon
    # - Unified workspace assignment for ALL apps (GLOBAL and SCOPED)
    # - Dynamic, rebuildless updates via application-registry.json
    # - No i3 native assign/for_window rules needed
    # Benefits: Unified logging, dynamic changes, better observability

    # Floating terminal window class
    for_window [class="floating_terminal"] floating enable

    # Floating fzf launcher window - remove borders, center on monitor, mark to exclude from daemon rules
    # The mark prevents the daemon from moving this window (daemon checks for _global_ui mark)
    for_window [instance="fzf-launcher"] floating enable, border pixel 0, move position center, mark _global_ui

    # Window management
    bindsym $mod+Shift+q kill

    # Application launcher (Feature 034: Unified launcher with Walker)
    # Primary launcher: Walker (modern GTK4 launcher with fuzzy search, calculator, file browser)
    # Use GDK_BACKEND=x11 to force X11 backend and avoid Wayland layer shell issues
    # Feature 034/035: Set XDG_DATA_DIRS to include i3pm-applications directory
    bindsym $mod+d exec env GDK_BACKEND=x11 XDG_DATA_DIRS="${config.home.homeDirectory}/.local/share/i3pm-applications:$XDG_DATA_DIRS" ${config.programs.walker.package}/bin/walker
    # FZF fallbacks for specific use cases
    bindsym $mod+Shift+d exec ${pkgs.xterm}/bin/xterm -name fzf-launcher -fa 'Monospace' -fs 12 -e /etc/nixos/scripts/fzf-launcher.sh
    bindsym $mod+Ctrl+d exec ${pkgs.xterm}/bin/xterm -name fzf-launcher -fa 'Monospace' -fs 12 -e /etc/nixos/scripts/fzf-send-to-window.sh
    # Walker alternative keybinding (Alt+Space for muscle memory)
    bindsym Mod1+space exec env GDK_BACKEND=x11 XDG_DATA_DIRS="${config.home.homeDirectory}/.local/share/i3pm-applications:$XDG_DATA_DIRS" ${config.programs.walker.package}/bin/walker

    # Keybinding cheatsheet (F1 for help)
    bindsym F1 exec /etc/nixos/scripts/keybindings-cheatsheet.sh

    # Clipboard (using FZF for better tmux integration)
    bindsym $mod+v exec /etc/nixos/scripts/clipcat-fzf.sh
    bindsym $mod+Shift+v exec ${pkgs.clipcat}/bin/clipcatctl clear

    # Screenshots (Spectacle)
    # Full screen to clipboard
    bindsym Print exec ${pkgs.kdePackages.spectacle}/bin/spectacle -bcf
    # Active window to clipboard
    bindsym $mod+Print exec ${pkgs.kdePackages.spectacle}/bin/spectacle -bca
    # Rectangular region to clipboard
    bindsym $mod+Shift+s exec ${pkgs.kdePackages.spectacle}/bin/spectacle -bcr

    # Quick launch (Feature 039: Now uses app-launcher for workspace assignment)
    bindsym $mod+Shift+b exec ${pkgs.ghostty}/bin/ghostty -e bash -c fh
    bindsym $mod+Shift+f exec ${pkgs.xfce.thunar}/bin/thunar
    bindsym $mod+k exec ~/.local/bin/app-launcher-wrapper.sh k9s
    bindsym $mod+a exec ${pkgs.glib}/bin/gio launch ~/.local/share/applications/FFPWA-01K665SPD8EPMP3JTW02JM1M0Z.desktop

    # Split orientation
    bindsym $mod+h split h
    bindsym $mod+Shift+bar split v

    # Fullscreen
    bindsym $mod+f fullscreen toggle

    # Container layout
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Toggle floating
    bindsym $mod+Shift+space floating toggle
    bindsym $mod+space focus mode_toggle
    bindsym $mod+Shift+9 move container to workspace $ws9

    # Project management keybindings (fzf-based switcher)
    bindsym $mod+p exec ${pkgs.xterm}/bin/xterm -name fzf-launcher -geometry 80x24 -e /etc/nixos/scripts/fzf-project-switcher.sh
    bindsym $mod+Shift+p exec i3pm project clear

    # Project-aware application launchers (Feature 035: Registry-based with environment injection)
    # All app names must match the "name" field in app-registry-data.nix
    bindsym $mod+c exec ~/.local/bin/app-launcher-wrapper.sh vscode
    bindsym $mod+Return exec ~/.local/bin/app-launcher-wrapper.sh terminal
    bindsym $mod+g exec ~/.local/bin/app-launcher-wrapper.sh lazygit
    bindsym $mod+y exec ~/.local/bin/app-launcher-wrapper.sh yazi
    bindsym $mod+b exec ~/.local/bin/app-launcher-wrapper.sh btop
    # Global terminal selector (no project required)
    bindsym $mod+Shift+Return exec ~/.local/bin/app-launcher-wrapper.sh terminal

    # T042: Monitor detection/workspace reassignment keybinding
    bindsym $mod+Shift+m exec ~/.config/i3/scripts/reassign-workspaces.sh

    # Reload/restart
    bindsym $mod+Shift+c reload
    bindsym $mod+Shift+r restart
    bindsym $mod+Shift+e exec "i3-msg exit"

    # i3bar configuration (dual bars: top + bottom)
    # Top bar: System monitoring (CPU, memory, disk, network, temperature)
    # Bottom bar: Project context and workspaces (event-driven via i3pm daemon)

    # Autostart - import full login environment so user systemd services inherit PATH/etc
    exec --no-startup-id ${pkgs.dbus}/bin/dbus-update-activation-environment --systemd --all

    # Web apps configuration
    include ~/.config/i3/web-apps.conf

    # Feature 035 REMOVED: Window rules now handled entirely by Python daemon (Feature 039)
    # include ~/.config/i3/window-rules-generated.conf

    # i3bar configurations (top and bottom)
    include ~/.config/i3/i3bar-top.conf
    include ~/.config/i3/i3bar-bottom.conf
  '';


  # Feature 039: Legacy wrapper scripts removed - daemon now handles all workspace assignment
  # Previously used window titles for workspace matching, now use registry-based matching

  # Create desktop files for terminal-based apps with unique window classes
  # This allows i3 to assign them to specific workspaces instead of the terminal workspace
  # Feature 034: DISABLED - Now using app-registry.nix for all Walker applications

  # home.file.".local/share/applications/yazi-custom.desktop".text = ''
  #   [Desktop Entry]
  #   Type=Application
  #   Name=Yazi File Manager
  #   Comment=Blazing fast terminal file manager
  #   Exec=${pkgs.ghostty}/bin/ghostty -e ${pkgs.yazi}/bin/yazi
  #   Icon=folder
  #   Terminal=false
  #   Categories=System;FileManager;
  #   StartupWMClass=ghostty
  # '';

  # home.file.".local/share/applications/k9s-custom.desktop".text = ''
  #   [Desktop Entry]
  #   Type=Application
  #   Name=K9s Kubernetes Manager
  #   Comment=Terminal UI for Kubernetes
  #   Exec=${pkgs.ghostty}/bin/ghostty -e /home/vpittamp/.local/bin/k9s-workspace
  #   Icon=kubernetes
  #   Terminal=false
  #   Categories=System;Development;
  #   StartupWMClass=ghostty
  # '';

  # home.file.".local/share/applications/lazygit-custom.desktop".text = ''
  #   [Desktop Entry]
  #   Type=Application
  #   Name=Lazygit
  #   Comment=Terminal UI for git
  #   Exec=${pkgs.ghostty}/bin/ghostty -e /home/vpittamp/.local/bin/lazygit-workspace
  #   Icon=git
  #   Terminal=false
  #   Categories=Development;RevisionControl;
  #   StartupWMClass=ghostty
  # '';

  # Install workspace reassignment script (for manual trigger and project-based reassignment)
  home.file.".config/i3/scripts/reassign-workspaces.sh" = {
    source = ./scripts/reassign-workspaces.sh;
    executable = true;
  };

}
