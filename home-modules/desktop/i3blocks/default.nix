# i3blocks Status Command Configuration
# Feature 013: Migrated from polybar to i3bar with i3blocks
# Feature 014: Converted to declarative script generation (T017-T021)
# Feature 022: Consolidated to use i3pm CLI
{ config, lib, pkgs, ... }:

let
  # Get i3pm package from the i3pm module
  i3pm = config.programs.i3pm.package;
  # T017: Project indicator script (uses i3pm CLI, Feature 022)
  # Consolidated to use i3pm instead of duplicate bash logic
  projectScript = pkgs.writeShellScript "i3blocks-project" ''
    #!${pkgs.bash}/bin/bash
    # Project context indicator for i3blocks
    # Uses i3pm CLI for consistent logic with all project management tools

    # Query i3pm for current project
    RESULT=$(${i3pm}/bin/i3pm current --json 2>/dev/null)

    if [ $? -ne 0 ] || [ -z "$RESULT" ]; then
      # Daemon not running or error
      TEXT="‚ö† Daemon"
      COLOR="#f38ba8"  # Red (Catppuccin Mocha - error)
      ${pkgs.coreutils}/bin/echo "<span foreground='$COLOR'>$TEXT</span>"
      exit 0
    fi

    # Check if in global mode
    MODE=$(${pkgs.coreutils}/bin/echo "$RESULT" | ${pkgs.jq}/bin/jq -r '.mode // empty')
    if [ "$MODE" = "global" ]; then
      # Global mode (no active project)
      TEXT="‚àÖ Global"
      COLOR="#6c7086"  # Overlay0 (Catppuccin Mocha - dimmed)
      ${pkgs.coreutils}/bin/echo "<span foreground='$COLOR'>$TEXT</span>"
      exit 0
    fi

    # Extract project info
    ICON=$(${pkgs.coreutils}/bin/echo "$RESULT" | ${pkgs.jq}/bin/jq -r '.icon // "üìÅ"')
    NAME=$(${pkgs.coreutils}/bin/echo "$RESULT" | ${pkgs.jq}/bin/jq -r '.name // "unknown"')

    # Build text
    TEXT="$ICON $NAME"
    COLOR="#b4befe"  # Lavender (Catppuccin Mocha - active project)
    ${pkgs.coreutils}/bin/echo "<span foreground='$COLOR'>$TEXT</span>"
  '';

  # T018: CPU usage script
  cpuScript = pkgs.writeShellScript "i3blocks-cpu" ''
    #!${pkgs.bash}/bin/bash
    # CPU usage script for i3blocks
    # Declaratively generated by home-manager

    CPU=$(${pkgs.procps}/bin/top -bn1 | ${pkgs.gnugrep}/bin/grep "Cpu(s)" | ${pkgs.gawk}/bin/awk '{print $2}' | ${pkgs.coreutils}/bin/cut -d'%' -f1 | ${pkgs.coreutils}/bin/cut -d'.' -f1)

    if [ -z "$CPU" ]; then
      CPU=0
    fi

    if [ "$CPU" -gt 95 ]; then
      COLOR="#f38ba8"  # Red (urgent)
    elif [ "$CPU" -gt 80 ]; then
      COLOR="#f9e2af"  # Yellow (warning)
    else
      COLOR="#a6e3a1"  # Green (normal)
    fi

    ${pkgs.coreutils}/bin/echo "<span foreground='$COLOR'> CPU: ''${CPU}%</span>"
  '';

  # T019: Memory usage script
  memoryScript = pkgs.writeShellScript "i3blocks-memory" ''
    #!${pkgs.bash}/bin/bash
    # Memory usage script for i3blocks
    # Declaratively generated by home-manager

    MEM_TOTAL=$(${pkgs.gnugrep}/bin/grep MemTotal /proc/meminfo | ${pkgs.gawk}/bin/awk '{print $2}')
    MEM_AVAIL=$(${pkgs.gnugrep}/bin/grep MemAvailable /proc/meminfo | ${pkgs.gawk}/bin/awk '{print $2}')

    MEM_USED=$((MEM_TOTAL - MEM_AVAIL))

    if [ "$MEM_TOTAL" -eq 0 ]; then
      MEM_PERCENT=0
    else
      MEM_PERCENT=$((MEM_USED * 100 / MEM_TOTAL))
    fi

    if [ "$MEM_PERCENT" -gt 95 ]; then
      COLOR="#f38ba8"  # Red (urgent)
    elif [ "$MEM_PERCENT" -gt 80 ]; then
      COLOR="#f9e2af"  # Yellow (warning)
    else
      COLOR="#89dceb"  # Sky blue (normal)
    fi

    ${pkgs.coreutils}/bin/echo "<span foreground='$COLOR'> MEM: ''${MEM_PERCENT}%</span>"
  '';

  # T020: Network status script
  networkScript = pkgs.writeShellScript "i3blocks-network" ''
    #!${pkgs.bash}/bin/bash
    # Network status script for i3blocks
    # Declaratively generated by home-manager

    INTERFACE=$(${pkgs.iproute2}/bin/ip route | ${pkgs.gnugrep}/bin/grep default | ${pkgs.gawk}/bin/awk '{print $5}' | ${pkgs.coreutils}/bin/head -n1)

    if [ -z "$INTERFACE" ]; then
      STATUS=" disconnected"
      COLOR="#f38ba8"  # Red
    else
      if ${pkgs.iproute2}/bin/ip link show "$INTERFACE" | ${pkgs.gnugrep}/bin/grep -q "state UP"; then
        STATUS=" $INTERFACE"
        COLOR="#a6e3a1"  # Green
      else
        STATUS=" $INTERFACE: down"
        COLOR="#f38ba8"  # Red
      fi
    fi

    ${pkgs.coreutils}/bin/echo "<span foreground='$COLOR'>$STATUS</span>"
  '';

  # T021: Date/time script
  datetimeScript = pkgs.writeShellScript "i3blocks-datetime" ''
    #!${pkgs.bash}/bin/bash
    # Date/time script for i3blocks
    # Declaratively generated by home-manager

    DATETIME=$(${pkgs.coreutils}/bin/date '+%Y-%m-%d %H:%M')

    ${pkgs.coreutils}/bin/echo "<span foreground='#cdd6f4'> $DATETIME</span>"
  '';
in
{
  # Install i3blocks package
  home.packages = [ pkgs.i3blocks ];

  # Generate i3blocks configuration file with proper nix store script paths
  xdg.configFile."i3blocks/config".text = ''
    # i3blocks configuration for i3bar
    # Generated by home-manager

    # Global properties
    separator_block_width=15
    markup=pango

    # Left side: System information blocks
    [cpu]
    command=${cpuScript}
    interval=5

    [memory]
    command=${memoryScript}
    interval=5

    # Center: Project indicator (daemon-based, real-time)
    # Queries daemon every 2 seconds for active project state
    # Feature 015: Event-driven daemon integration
    [project]
    command=${projectScript}
    interval=2

    # Right side: Network and DateTime
    [network]
    command=${networkScript}
    interval=10

    [datetime]
    command=${datetimeScript}
    interval=60
  '';
}
