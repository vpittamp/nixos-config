# i3 Window Manager Configuration Module
# Minimal working version for Phase 2 Foundational
{ config, lib, pkgs, ... }:

with lib;

let
  cfg = config.services.i3wm;
in {
  options.services.i3wm = {
    enable = mkEnableOption "i3 window manager";

    package = mkOption {
      type = types.package;
      default = pkgs.i3;
      description = "i3 package to use";
    };

    extraPackages = mkOption {
      type = types.listOf types.package;
      default = with pkgs; [ dmenu i3status i3lock ];
      description = "Additional packages to install with i3";
    };
  };

  config = mkIf cfg.enable {
    # Enable X11 and i3
    services.xserver = {
      enable = true;
      windowManager.i3 = {
        enable = true;
        package = cfg.package;
        extraPackages = cfg.extraPackages;
      };

      # Configure for headless operation with virtual display
      videoDrivers = mkDefault [ "modesetting" "fbdev" ];
    };

    # Set i3 as default session
    services.displayManager.defaultSession = mkDefault "none+i3";

    # Disable display manager for headless operation
    services.displayManager.sddm.enable = mkForce false;

    # Install i3 and essential tools
    environment.systemPackages = with pkgs; [
      cfg.package
      alacritty  # Terminal
      rofi       # Application launcher (better than dmenu)
    ] ++ cfg.extraPackages;

    # Simple keybinding help script - just display keybindings in rofi
    environment.etc."i3/scripts/show-keybindings.sh" = {
      text = ''
        #!/usr/bin/env bash
        # Simple i3 keybinding viewer - displays all bindsym entries
        ${pkgs.gnugrep}/bin/grep '^[[:space:]]*bindsym' /etc/i3/config | \
            ${pkgs.gnused}/bin/sed 's/^[[:space:]]*bindsym //' | \
            ${pkgs.util-linux}/bin/column -t -s ' ' | \
            ${pkgs.rofi}/bin/rofi -dmenu -p "i3 Keybindings" -i -width 80 -lines 20
      '';
      mode = "0755";
    };

    # Basic i3 configuration - minimal working config
    environment.etc."i3/config".text = ''
      # i3 configuration file (v4)
      # Generated by NixOS i3wm module

      # Mod key (Mod1=Alt, Mod4=Super/Windows)
      set $mod Mod4

      # Font for window titles and bar
      font pango:monospace 10

      # Use Mouse+$mod to drag floating windows
      floating_modifier $mod

      # Start a terminal (FR-024, T063)
      bindsym $mod+Return exec ${pkgs.alacritty}/bin/alacritty

      # Floating terminal (T064)
      bindsym $mod+Shift+Return exec ${pkgs.alacritty}/bin/alacritty --class floating_terminal
      for_window [class="floating_terminal"] floating enable

      # Kill focused window
      bindsym $mod+Shift+q kill

      # Start application launcher
      bindsym $mod+d exec ${pkgs.rofi}/bin/rofi -show drun -display-drun "Applications"

      # Clipboard history (FR-031, T090, T091)
      bindsym $mod+v exec ${pkgs.clipcat}/bin/clipcat-menu
      bindsym $mod+Shift+v exec ${pkgs.clipcat}/bin/clipctl clear

      # Show keybinding help (Super+i for info/help)
      bindsym $mod+i exec /etc/i3/scripts/show-keybindings.sh

      # Quick launch applications
      # Use env to ensure DISPLAY is set correctly for current session
      bindsym $mod+c exec env DISPLAY=$DISPLAY code
      bindsym $mod+b exec env DISPLAY=$DISPLAY firefox

      # Change focus
      bindsym $mod+Left focus left
      bindsym $mod+Down focus down
      bindsym $mod+Up focus up
      bindsym $mod+Right focus right

      # Move focused window
      bindsym $mod+Shift+Left move left
      bindsym $mod+Shift+Down move down
      bindsym $mod+Shift+Up move up
      bindsym $mod+Shift+Right move right

      # Split orientation
      bindsym $mod+h split h
      bindsym $mod+Shift+bar split v

      # Fullscreen
      bindsym $mod+f fullscreen toggle

      # Change container layout
      bindsym $mod+s layout stacking
      bindsym $mod+w layout tabbed
      bindsym $mod+e layout toggle split

      # Toggle floating
      bindsym $mod+Shift+space floating toggle

      # Change focus between tiling / floating windows
      bindsym $mod+space focus mode_toggle

      # Scratchpad (FR-025, T065, T066)
      # Move window to scratchpad (hide it)
      bindsym $mod+Shift+minus move scratchpad
      # Show/hide scratchpad window (cycles through all scratchpad windows)
      bindsym $mod+minus scratchpad show

      # Workspace switching (Ctrl+1-9)
      bindsym Control+1 workspace number 1
      bindsym Control+2 workspace number 2
      bindsym Control+3 workspace number 3
      bindsym Control+4 workspace number 4
      bindsym Control+5 workspace number 5
      bindsym Control+6 workspace number 6
      bindsym Control+7 workspace number 7
      bindsym Control+8 workspace number 8
      bindsym Control+9 workspace number 9

      # Move container to workspace
      bindsym $mod+Shift+1 move container to workspace number 1
      bindsym $mod+Shift+2 move container to workspace number 2
      bindsym $mod+Shift+3 move container to workspace number 3
      bindsym $mod+Shift+4 move container to workspace number 4
      bindsym $mod+Shift+5 move container to workspace number 5
      bindsym $mod+Shift+6 move container to workspace number 6
      bindsym $mod+Shift+7 move container to workspace number 7
      bindsym $mod+Shift+8 move container to workspace number 8
      bindsym $mod+Shift+9 move container to workspace number 9

      # Reload configuration
      bindsym $mod+Shift+c reload

      # Restart i3
      bindsym $mod+Shift+r restart

      # Exit i3
      bindsym $mod+Shift+e exec "i3-msg exit"

      # Status bar
      bar {
        id bar-0
        status_command ${pkgs.i3status}/bin/i3status
        position bottom
      }
    '';

    # Basic i3status configuration
    environment.etc."i3status.conf".text = ''
      general {
        colors = true
        interval = 5
      }

      order += "disk /"
      order += "memory"
      order += "load"
      order += "tztime local"

      disk "/" {
        format = "ðŸ’¾ %avail"
      }

      memory {
        format = "ðŸ§  %used"
        threshold_degraded = "10%"
        format_degraded = "MEMORY LOW: %free"
      }

      load {
        format = "âš¡ %1min"
      }

      tztime local {
        format = "ðŸ“… %Y-%m-%d %H:%M"
      }
    '';
  };
}
